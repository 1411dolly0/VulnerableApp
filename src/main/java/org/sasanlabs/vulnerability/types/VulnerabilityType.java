package org.sasanlabs.vulnerability.types;

import org.sasanlabs.internal.utility.annotations.AttackVector;

/**
 * This will be part of {@link AttackVector} annotation. This will be returned to Scanners for
 * better comparison of there results. For more information on How this can be helpful for scanners
 * please visit <br>
 * 1. <a href="https://github.com/SasanLabs/VulnerableApp/issues/130">Scanner Reporting system</a>
 * <br>
 * 2. <a href="https://github.com/SasanLabs/VulnerableApp/issues/147">Vulnerability SubType
 * Issue</a>
 *
 * @author KSASAN preetkaran20@gmail.com
 */
public enum VulnerabilityType {

    // SQL Injection
    BLIND_SQL_INJECTION(89,19),


    ERROR_BASED_SQL_INJECTION(89,19),
    UNION_BASED_SQL_INJECTION(89,19),

    // XSS
    REFLECTED_XSS(79,8),
    PERSISTENT_XSS(79,8),
    DOM_BASED_XSS(79,8),

    // JWT Related
    CLIENT_SIDE_VULNERABLE_JWT(null,null),
    SERVER_SIDE_VULNERABLE_JWT(null,null),
    INSECURE_CONFIGURATION_JWT(null,null),

    PATH_TRAVERSAL(22,33),
    COMMAND_INJECTION(77,null),

    UNRESTRICTED_FILE_UPLOAD(434,null),

    OPEN_REDIRECT_3XX_STATUS_CODE(601,38),

    // XXE Vulnerability
    XXE(611,43);

    public Integer CWE_ID;
    public Integer WASC_ID;

    VulnerabilityType(Integer CWE_ID, Integer WASC_ID) {
        this.CWE_ID = CWE_ID;
        this.WASC_ID = WASC_ID;
    }
}
